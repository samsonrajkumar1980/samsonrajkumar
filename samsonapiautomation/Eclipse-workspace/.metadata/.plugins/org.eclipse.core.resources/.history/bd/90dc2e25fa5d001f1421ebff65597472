package stepDef;

import org.junit.Test;

import com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import urls.urlss;
import io.restassured.response.ResponseBody;
import static org.hamcrest.Matchers.*;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class postAPI {


	RequestSpecification postrequest;
	Response postresponse;
	RequestSpecification getrequest;
	Response getresponse;
	RequestSpecification unknowngetrequest;
	Response unknowngetresponse;
	private String ids; 

	private static final Logger logger = LogManager.getLogger(postapi.class);

	@Test
	public void postAPI()
	{
//		create post prerequest script 
		RestAssured.baseURI=urlss.baseUrl.endpoint();
		postrequest=RestAssured.given().log().all().header("Content-Type",ContentType.JSON).body(payload.postrequest.payloads());

//		execute post api
		postresponse = postrequest.when().post(urlss.createpostapi.endpoint());
		validate the 201 response code
		postresponse.then().log().all().assertThat().statusCode(201);
		validate the response id is matching with expected result 
		postresponse.then().body("job", equalTo("leader"));
		retrieve the ID values
		ids = postresponse.jsonPath().getString("id");
			System.out.println("print the id value" +id);
		print the value id value using log4j2
		logger.info("print the i value:"+ids);
		 print the log response in report 
				ExtentCucumberAdapter.addTestStepLog("Print the id values"+ids);

		create get pre request script 
		getrequest=RestAssured.given().log().all().header("Content-Type",ContentType.JSON);

			https:reqres.in/api/users?page=2
		pass the id in path parameter and execute get api
		getresponse=getrequest.get(urlss.retrievegetapi.endpoint()+ids);
		validate the 200 response code 
		postresponse.then().log().all().assertThat().statusCode(201);
		create unknown get pre request script
		unknowngetrequest=RestAssured.given().log().all().header("Content-Type",ContentType.JSON);
			https:reqres.in/api/unknown
		execute get api
		unknowngetresponse=unknowngetrequest.when().get(urlss.validateunknownapi.endpoint());
		validate the 200 response code 
		unknowngetresponse.then().assertThat().statusCode(200);
		get the response data from the year 2000 color 



	}
